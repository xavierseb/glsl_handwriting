vec2 char_fn(float t)
{
    // position of character in chars[], corresponding to the current screen frame count iFrame previously drawn, staggered with factor iFrame%297
    vec4 x = chars[20];//2*pos]+rnd(p) * messiness;
    vec4 y = chars[21]+.5;//2*pos+1]+rnd1(p) * messiness;
    
    float t1 = 1.-t; 
    // bezier curve plot xout and yout ( x(t) and y(t) ) are in the range [0.0,1.0]
    float xt = t1*(t1*(t1*x[0]+t*x[1])+t*(t1*x[1]+t*x[2]))+t*(t1*(t1*x[1]+t*x[2])+t*(t1*x[2]+t*x[3]));
    float yt = t1*(t1*(t1*y[0]+t*y[1])+t*(t1*y[1]+t*y[2]))+t*(t1*(t1*y[1]+t*y[2])+t*(t1*y[2]+t*y[3]));
    
    return vec2(xt,yt);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord ){
	vec2 p = (10.*fragCoord.xy-iResolution.xy)/iResolution.y+vec2(-6.5,-5.);    
 	float d = 10.;  
    for(float i=0.0; i<1.0; i+=.0125)  d=min(d,distance(p,char_fn(i)));
	vec3 col = mix( vec3(0.), vec3(1.0), smoothstep(0.05,.1,d) );
	fragColor = vec4(col,1.0);
}
