vec4 interpolate(vec4 from, vec4 to, float degree) 
{
    return vec4(from + (to-from)*degree);
}

vec2 func(float t, int pos, float anim)
{
    // position of character in chars[], corresponding to the current screen frame count iFrame previously drawn, staggered with factor iFrame%297
    vec4 x = interpolate(chars[2*pos], chars[2*pos+2], anim);//chars[2*pos];//2*pos]+rnd(p) * messiness;
    vec4 y = interpolate(chars[2*pos+1]+.5, chars[2*pos+3]+.5, anim);//2*pos+1]+rnd1(p) * messiness;
    
    float t1 = 1.-t; 
    // bezier curve plot xout and yout ( x(t) and y(t) ) are in the range [0.0,1.0]
    float xt = t1*(t1*(t1*x[0]+t*x[1])+t*(t1*x[1]+t*x[2]))+t*(t1*(t1*x[1]+t*x[2])+t*(t1*x[2]+t*x[3]));
    float yt = t1*(t1*(t1*y[0]+t*y[1])+t*(t1*y[1]+t*y[2]))+t*(t1*(t1*y[1]+t*y[2])+t*(t1*y[2]+t*y[3]));
    
    return vec2(xt,yt);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord ){
    // jump from char to char (after drawing all the points of char, jump to next char)
    //int hPos = (iFrame%(int(fN)*2));
        //vec2 xy = getPos(textPos)*iResolution.xy+ vec2(iResolution.x*float(textPos)/N_float, iResolution.y*2./N_float);

    // color = 0 to 1. for each r,g,b  opacity is ranged 0. to 1.
    float thickness = .12;
    float saturation=.425;
    // adjust opacity and density together to find sweet spot
    float opacity = 2.;
    vec3 color = vec3(0.,.5,.6)*saturation;
    
    vec2 p = (10.*fragCoord.xy-iResolution.xy)/iResolution.y+vec2(-6.5,-5.);    
 	float d = 10.;  
    float m = fract(float(iFrame)/60.);
    for(float i=0.0; i<1.0; i+=.01) {
        int frame = (iFrame/100) %34;
        d=min(d,distance(p,           func(i, (frame/2)*2  ,  m) ));
    	if(d>.01)d=min(d,distance(p,  func(i, (frame/2)*2+1 , m) ));
    }
	vec3 col = mix( vec3(0.), vec3(1.0), smoothstep(0.05,.1,d) );
	fragColor = vec4(col,1.0);
}

/*
void mainImage( out vec4 fragColor, in vec2 fragCoord ){
	vec2 p = (10.*fragCoord.xy-iResolution.xy)/iResolution.y+vec2(-6.5,-5.);    
 	float d = 10.;  
    for(float i=0.0; i<1.0; i+=.0125)  d=min(d,distance(p,char_fn(i)));
	vec3 col = mix( vec3(0.), vec3(1.0), smoothstep(0.05,.1,d) );
	fragColor = vec4(col,1.0);
}
*/
